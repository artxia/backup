redis:
  host: localhost  # redis 运行的主机，默认为 localhost ；使用 docker-compose 时，应为 redis
  port: 6379  # redis 提供的端口，默认为 6379

telegram:
  api_id: 1430968
  api_hash: 07689061c27182818012e05c1987a998
  admin_id: 629321234
  bot_token: 1023456789:AbCd44534523241-dsSD324ljkjafgfdgf4dD

proxy:
  protocol: http  # http or socks5, socks4
  host: localhost  # or something like 127.0.0.1. docker on Linux: 172.17.0.1, on Mac/Windows: host.docker.internal
  port: 1080

chat_id:
  - -1001439046799  # 在每一行中填写需要进行搜索的聊天的 id，可以填写多个或一个
  - -1001496719082

search:
  page_len: 10  # 输出搜索结果时每页的输出数量，默认为 10

welcome_message: 这里是 @sharzy_talk 的搜索 Bot，直接发送你要搜索的内容即可  # 用户启动 bot 时的欢迎信息

private_mode: false  # 如果设置为 true，那么人们将无法看到消息的预览；如果设置为 strict，那么只有白名单内的用户才能操作 bot (请把自己加进白名单内)

private_whitelist:  # private mode 的白名单，在此名单中的用户总可以看到消息的预览
  - 134312541
  - 312421344

random_mode: true  # 如果设置为 true，当用户发送 /random 指令时，会随机返回一条已索引消息的链接

runtime_dir: /var/lib/tg_searcher  # 存储 Telegram session 和消息索引文件的目录；使用 docker-compose 时，应为 /app/config/tg_searcher_data
